Imports System.Runtime.InteropServices
Imports System.IO
Imports System.Drawing.Imaging

Public Module IconFinder

    <DllImport("shell32.dll")>
    Private Function ExtractAssociatedIcon(ByVal hinst As IntPtr, ByVal lpiconpath As String, ByRef lpiicon As Integer) As IntPtr
    End Function

    <DllImport("shell32.dll", CharSet:=CharSet.Auto)>
    Private Function ExtractIconEx(ByVal szFileName As String, ByVal nIconIndex As Integer, ByVal phiconLarge As IntPtr, ByVal phiconSmall As IntPtr, ByVal nIcons As UInteger) As UInteger
    End Function

    Public Function GetIcons(ByVal frmParent As Form, ByVal sFileName As String) As List(Of Icon)
        Dim icons As New List(Of Icon)
        Dim numicons As Integer = ExtractIconEx(sFileName, -1, 0, 0, 0)
        Dim currentIcon As Icon
        Dim hIcon As IntPtr
        For i = 0 To numicons Step 1
            Try
                hIcon = ExtractAssociatedIcon(frmParent.Handle, sFileName, i)
                currentIcon = Icon.FromHandle(hIcon)
                icons.Add(currentIcon)
                If icons.Count >= numicons Then Exit For
            Catch
            End Try
        Next
        Return icons
    End Function

End Module